services:
  zookeeper:
    image: confluentinc/cp-zookeeper:7.4.0
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"

  kafka:
    image: bitnami/kafka:3.5
    container_name: kafka
    ports:
      - "9092:9092"
    environment:
      - KAFKA_BROKER_ID=1
      - KAFKA_CFG_PROCESS_ROLES=broker,controller
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=1@localhost:9093
      - KAFKA_CFG_NODE_ID=1
      - ALLOW_PLAINTEXT_LISTENER=yes
    depends_on:
      - zookeeper


  python2app:
    build: ./producer
    container_name: python2app
    depends_on:
      - kafka
      
         
      
  # MongoDB
  mongo:
    image: mongo:6.0
    ports:
      - "27017:27017"
    volumes:
      - mongo_data:/data/db
      

  # Spark streaming job container
  spark-job:
    build:
      context: ./spark_job
    depends_on:
      - kafka
      - mongo
    environment:
      - MONGO_URI=mongodb://mongo:27017
    restart: on-failure

  # Flask API container
  api:
    build:
      context: ./flask_api
    depends_on:
      - mongo
    environment:
      - MONGO_URI=mongodb://mongo:27017
    ports:
     - "5000:5000"
    restart: on-failure

volumes:
  mongo_data:


      

